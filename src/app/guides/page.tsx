"use client";

import { useState } from "react";

import CharacterLimitTextarea from "../../components/common/CharacterLimitTextarea";

export default function Home() {
  const [text, setText] = useState("");

  const handleTextChange = (newValue: string) => {
    setText(newValue);
  };

  return (
    <main>
      <div className="p-4">
        <CharacterLimitTextarea
          maxLength={25}
          value={text}
          label="Bio"
          id="message"
          name="message"
          onChange={handleTextChange}
        />
      </div>
      <h2 className="text-2xl font-semibold">Breadcrumbs</h2>
      <div
        className="grid w-full items-start gap-4"
        style={{ gridTemplateColumns: "repeat(auto-fit,minmax(300px,1fr))" }}
      >
        <div className="flex h-full flex-col items-start justify-between gap-y-6 rounded-lg border px-5 py-5">
          <p>Breadcrumb with autogenerated pages</p>
          <Breadcrumb />
        </div>
        <div className="flex h-full flex-col items-start justify-between gap-y-6 rounded-lg border px-5 py-5">
          <p>
            Breadcrumb with{" "}
            <span className="font-bold text-primary">primary</span> variant
          </p>
          <Breadcrumb variant="primary" />
        </div>
        <div className="flex h-full flex-col items-start justify-between gap-y-6 rounded-lg border px-5 py-5">
          <p>
            Breadcrumb with <span className="font-bold">pages</span> prop
          </p>
          <Breadcrumb
            pages={[
              { name: "Home", href: "/" },
              { name: "Legal Terms", href: "/legal-terms" },
              {
                name: "Privacy Policy",
                href: "/legal-terms/policy",
                isCurrent: true,
              },
            ]}
          />
        </div>
        <div className="flex h-full flex-col items-start justify-between gap-y-6 rounded-lg border px-5 py-5">
          <p>
            Breadcrumb with <span className="font-bold">pages</span> and{" "}
            <span className="font-primary font-bold">variant</span> prop
          </p>
          <Breadcrumb
            variant="primary"
            pages={[
              { name: "Home", href: "/" },
              { name: "Legal Terms", href: "/legal-terms" },
              {
                name: "Privacy Policy",
                href: "/legal-terms/policy",
                isCurrent: true,
              },
            ]}
          />
        </div>
        <div className="flex h-full flex-col items-start justify-between gap-y-6 rounded-lg border px-5 py-5">
          <p>
            Breadcrumb with <span className="font-bold">pages</span> and{" "}
            <span className="font-bold">maxPages</span> prop
          </p>
          <Breadcrumb
            maxPages={2}
            pages={[
              { name: "Home", href: "/" },
              { name: "Legal Terms", href: "/legal-terms" },
              {
                name: "Privacy Policy",
                href: "/legal-terms/policy",
                isCurrent: true,
              },
            ]}
          />
        </div>
      </div>

      <h2 className="text-2xl font-semibold">User Dashboard Sidebar</h2>
      <p>How to Use:</p>
      <ul className="list-disc">
        <li>Import: Import Sidebar from the components/layouts/sidebar.tsx</li>
        <li>
          This component uses next/navigation&apos;s usePathname hook,
          compatible with Next.js app router.
        </li>
        <li>
          Customization: Customize the sidebarItems array in the Sidebar
          component to match your navigation structure.
        </li>
      </ul>

      <Sidebar />

      <div className="space-y-4 rounded-lg bg-gray-100 p-4 shadow-md">
        <h2 className="text-2xl font-semibold text-gray-800">
          HBP Comment Box
        </h2>
        <div className="flex flex-col space-y-4">
          {commentsData.map((comment) => (
            <HBPCommentBox
              key={comment.id}
              id={comment.id}
              avatar={comment.avatar}
              name={comment.name}
              username={comment.username}
              content={comment.content}
              timestamp={comment.timestamp}
              date={comment.date}
              likes={comment.likes}
              dislikes={comment.dislikes}
              className="rounded-lg bg-white p-4 shadow-sm transition-shadow hover:shadow-md"
            />
          ))}
        </div>
      </div>
    </main>
  );
}
